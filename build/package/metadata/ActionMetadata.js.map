{"version":3,"sources":["../../src/metadata/ActionMetadata.ts"],"names":[],"mappings":";;AAGA;;GAEG;AACH;IAAA;IAuCA,CAAC;IAAD,qBAAC;AAAD,CAvCA,AAuCC,IAAA;AAvCY,wCAAc","file":"ActionMetadata.js","sourcesContent":["import {ArgsValidatorInterface} from \"../interface/ArgsValidatorInterface\";\nimport {RoleCheckerInterface} from \"../index\";\n\n/**\n * Metadata for a single controller action.\n */\nexport class ActionMetadata {\n\n    /**\n     * Action type.\n     */\n    type: \"query\"|\"mutation\"|\"subscription\";\n\n    /**\n     * Target controller class.\n     */\n    target: Function;\n\n    /**\n     * Controller method.\n     */\n    methodName: string;\n\n    /**\n     * GraphQL query/mutation/subscription name.\n     * If not specified by user then action method will be used instead.\n     */\n    name: string;\n\n    /**\n     * Indicates if transaction should be created for controller action.\n     * By default it is enabled for mutation and disabled for query and subscription.\n     */\n    transaction: boolean;\n\n    /**\n     * Args validator used to validate action arguments.\n     */\n    validators: { new (): ArgsValidatorInterface<any> }[];\n\n    /**\n     * Special roles used to check user authorization status to access this action.\n     */\n    authorizes: (any[]|{ new (): RoleCheckerInterface })[];\n\n}"],"sourceRoot":".."}