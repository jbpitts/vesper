{"version":3,"sources":["../../src/interface/Action.ts"],"names":[],"mappings":"","file":"Action.js","sourcesContent":["import {Request, Response} from \"express\";\nimport {ContainerInstance} from \"typedi\";\nimport {ActionMetadata} from \"../metadata/ActionMetadata\";\nimport {GraphQLResolveInfo} from \"graphql\";\nimport {ResolveMetadata} from \"../metadata/ResolveMetadata\";\n\n/**\n * Controller action properties.\n */\nexport interface Action {\n\n    /**\n     * Scoped container in which this action is running.\n     */\n    container: ContainerInstance;\n\n    /**\n     * Action Request object.\n     * Can be undefined only in subscriptions.\n     */\n    request?: Request;\n\n    /**\n     * Action Response object.\n     * Can be undefined only in subscriptions.\n     */\n    response?: Response;\n\n    /**\n     * Executing action metadata.\n     * For controller actions its ActionMetadata and for resolvers its ResolveMetadata.\n     */\n    metadata: ActionMetadata|ResolveMetadata;\n\n    /**\n     * The object that contains the result returned from the resolver on the parent field, or,\n     * in the case of a top-level Query field, the rootValue passed from the server configuration.\n     * This argument enables the nested nature of GraphQL queries.\n     */\n    obj: any;\n\n    /**\n     * An object with the arguments passed into the field in the query.\n     * For example, if the field was called with author(name: \"Ada\"), the args object would be: { \"name\": \"Ada\" }.\n     */\n    args: any;\n\n    /**\n     * This is an object shared by all resolvers in a particular query,\n     * and is used to contain per-request state, including authentication information, dataloader instances,\n     * and anything else that should be taken into account when resolving the query.\n     */\n    context: any;\n\n    /**\n     * This argument should only be used in advanced cases,\n     * but it contains information about the execution state of the query,\n     * including the field name, path to the field from the root, and more.\n     */\n    info: GraphQLResolveInfo;\n\n}\n"],"sourceRoot":".."}