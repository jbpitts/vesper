{"version":3,"sources":["../../src/options/GraphModuleControllerAction.ts"],"names":[],"mappings":"","file":"GraphModuleControllerAction.js","sourcesContent":["import {ArgsValidatorInterface} from \"../interface/ArgsValidatorInterface\";\nimport {RoleCheckerInterface} from \"../index\";\n\n/**\n * Represents a single module controller action.\n */\nexport interface GraphModuleControllerAction<T, P = keyof T> {\n\n    /**\n     * GraphQL resolver type.\n     */\n    type: \"query\"|\"mutation\"|\"subscription\";\n\n    /**\n     * Controller class.\n     */\n    controller: { new (): T };\n\n    /**\n     * Controller method.\n     */\n    action: P;\n\n    /**\n     * Optional GraphQL query/mutation/subscription name.\n     * If not specified then action method will be used instead.\n     */\n    name?: string;\n\n    /**\n     * Indicates if transaction should be created for controller action.\n     * By default it is enabled for mutation and disabled for query and subscription.\n     */\n    transaction?: boolean;\n\n    /**\n     * Args validator used to validate action arguments.\n     */\n    validators?: { new (): ArgsValidatorInterface<any> }[];\n\n    /**\n     * Special roles used to check user authorization status to access this action.\n     */\n    authorizes?: (any[]|{ new (): RoleCheckerInterface })[];\n\n}"],"sourceRoot":".."}