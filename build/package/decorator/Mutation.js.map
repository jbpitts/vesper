{"version":3,"sources":["../../src/decorator/Mutation.ts"],"names":[],"mappings":";;AAAA,kCAAgD;AAEhD;;GAEG;AACH,kBAAyB,OAAkD;IACvE,OAAO,UAAU,MAAc,EAAE,UAAkB;QAC/C,8BAAsB,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC;YAClC,IAAI,EAAE,UAAU;YAChB,MAAM,EAAE,MAAM,CAAC,WAAW;YAC1B,UAAU,EAAE,UAAU;YACtB,IAAI,EAAE,CAAC,OAAO,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS;YAC1D,WAAW,EAAE,CAAC,OAAO,IAAI,OAAO,CAAC,WAAW,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI;SACzE,CAAC,CAAC;IACP,CAAC,CAAC;AACN,CAAC;AAVD,4BAUC","file":"Mutation.js","sourcesContent":["import {getMetadataArgsStorage} from \"../index\";\n\n/**\n * Registers a controller method as a GraphQL mutation.\n */\nexport function Mutation(options?: { name?: string, transaction?: boolean }) {\n    return function (object: Object, methodName: string) {\n        getMetadataArgsStorage().actions.push({\n            type: \"mutation\",\n            target: object.constructor,\n            methodName: methodName,\n            name: (options && options.name) ? options.name : undefined,\n            transaction: (options && options.transaction === false) ? false : true\n        });\n    };\n}"],"sourceRoot":".."}