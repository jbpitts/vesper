{"version":3,"sources":["../../src/decorator/Query.ts"],"names":[],"mappings":";;AAAA,kCAAgD;AAEhD;;GAEG;AACH,eAAsB,OAAkD;IACpE,OAAO,UAAU,MAAc,EAAE,UAAkB;QAC/C,8BAAsB,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC;YAClC,IAAI,EAAE,OAAO;YACb,MAAM,EAAE,MAAM,CAAC,WAAW;YAC1B,UAAU,EAAE,UAAU;YACtB,IAAI,EAAE,CAAC,OAAO,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS;YAC1D,WAAW,EAAE,CAAC,OAAO,IAAI,OAAO,CAAC,WAAW,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK;SACxE,CAAC,CAAC;IACP,CAAC,CAAC;AACN,CAAC;AAVD,sBAUC","file":"Query.js","sourcesContent":["import {getMetadataArgsStorage} from \"../index\";\n\n/**\n * Registers a controller method as a GraphQL query.\n */\nexport function Query(options?: { name?: string, transaction?: boolean }) {\n    return function (object: Object, methodName: string) {\n        getMetadataArgsStorage().actions.push({\n            type: \"query\",\n            target: object.constructor,\n            methodName: methodName,\n            name: (options && options.name) ? options.name : undefined,\n            transaction: (options && options.transaction === true) ? true : false\n        });\n    };\n}"],"sourceRoot":".."}